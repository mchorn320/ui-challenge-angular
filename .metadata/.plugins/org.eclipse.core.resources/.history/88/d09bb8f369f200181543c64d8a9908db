package com.lidp.customer.models;

import java.io.File;
import java.lang.management.ManagementFactory;

import javax.management.Attribute;
import javax.management.AttributeList;
import javax.management.MBeanServer;
import javax.management.ObjectName;

import com.sun.management.jmx.*;


public class Usage {
	
	private long maxMemory;
	private long freeMemory;
	private long totalHardDriveSpace;
	private long remainingHardDriveSpace;
	private long cpuUsage;
	private int availableProcessors;
	
	public Usage() {
		super();
		this.maxMemory = Runtime.getRuntime().maxMemory();
		this.freeMemory = Runtime.getRuntime().freeMemory();
		setHardDriveSpace();
		this.availableProcessors = Runtime.getRuntime().availableProcessors();
		
	}
	
	private void setHardDriveSpace() {
		File[] roots = File.listRoots();
		for (File root : roots) {
		      this.totalHardDriveSpace = root.getTotalSpace();
		      this.remainingHardDriveSpace = root.getFreeSpace();
		 }
		
	}
	
	public static double getProcessCpuLoad() throws Exception {

	    MBeanServer mbs    = ManagementFactory.getPlatformMBeanServer();
	    ObjectName name    = ObjectName.getInstance("java.lang:type=OperatingSystem");
	    AttributeList list = mbs.getAttributes(name, new String[]{ "ProcessCpuLoad" });

	    if (list.isEmpty())     return Double.NaN;

	    Attribute att = (Attribute)list.get(0);
	    Double value  = (Double)att.getValue();

	    // usually takes a couple of seconds before we get real values
	    if (value == -1.0)      return Double.NaN;
	    // returns a percentage value with 1 decimal point precision
	    return ((int)(value * 1000) / 10.0);
	}
	

}
